<section class="hero-section">
  <div class="swiper-container-hero">
    <div class="swiper-wrapper">
      {% for block in section.blocks %}
        <div class="swiper-slide item">
          <div class="item-inner">
            <div class="hero-content" style="text-align: {{ block.settings.title_alignment }};">
              <h2 class="hero-title">{{ block.settings.title }}</h2>
              <p class="hero-subtitle">{{ block.settings.text }}</p>
              {% unless block.settings.hide_button %}
                <a
                  href="{{ block.settings.button_link }}"
                  class="hero-button"
                  style="text-align: {{ block.settings.button_alignment }};"
                >
                  {{- block.settings.button_text -}}
                </a>
              {% endunless %}
            </div>
            <img
              src="{{ block.settings.image | image_url }}"
              alt="{{ block.settings.title }}"
              class="hero-img"
              width="100%"
              height="100%"
            >
          </div>
        </div>
      {% endfor %}
    </div>

    <div class="arrows-container-hero">
      <div class="arrow-left-hero">
        <img src="{{ 'icon-arrow-left.svg' | asset_url }}" alt="Previous" width="100%" height="100%">
      </div>

      <div class="arrow-right-hero autoplay-progress">
        <svg viewBox="0 0 60 60">
          <circle cx="30" cy="30" r="29.5"></circle>
        </svg>
        <span></span>
        <img src="{{ 'icon-arrow-right.svg' | asset_url }}" alt="Next" width="100%" height="100%">
      </div>
    </div>
  </div>
</section>

<style>
  .item {
    top: 0;
    left: 0;
    width: 100vw;
    height: 86vh;
    display: flex;
    flex-direction: column;
    margin: 0;
    padding: 0;
  }

  .item-inner {
    display: flex;
    flex-grow: 1;
    height: 100%;
    overflow: auto;
  }

  .hero-img {
    width: 100%;
    height: 100%;
    object-fit: contain;
  }

  .hero-content {
    position: absolute;
    left: 76px;
    bottom: 100px;
    display: flex;
    flex-direction: column;
    gap: 15px;
    width: 320px;
  }

  .hero-button {
    background-color: rgba(66, 171, 222, 1);
    padding: 14px 30px;
    color: #fff;
    border: none;
    border-radius: 100px;
    font-size: 15px;
    font-family: 'Montserrat', sans-serif;
    text-decoration: none;
  }

  .hero-subtitle {
    font-family: Karla, sans-serif;
    font-size: 15px;
    line-height: 24px;
    color: rgba(128, 128, 128, 1);
  }

  .hero-title {
    font-family: Montserrat, sans-serif;
    font-size: 24px;
    line-height: 36px;
    color: rgba(35, 31, 32, 1);
  }

  .hero-section {
    position: relative;
  }

  .arrows-container-hero {
    width: 140px;
    cursor: pointer;
    z-index: 3;
    position: absolute;
    right: 100px;
    bottom: 100px;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .autoplay-progress {
    position: absolute;
    right: 10px;
    z-index: 10;
    width: 60px;
    height: 60px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
    color: rgba(66, 171, 222, 1);
  }

  .autoplay-progress svg {
    --progress: 0;
    position: absolute;
    left: 0;
    top: 0px;
    z-index: 10;
    width: 100%;
    height: 100%;
    stroke-width: 1px;
    stroke: rgba(66, 171, 222, 1);
    fill: none;
    stroke-dashoffset: calc(188.4px * (1 - var(--progress)));
    stroke-dasharray: 188.4;
    transform: rotate(-90deg);
  }

  .arrow-left-hero,
  .arrow-right-hero {
    width: 60px;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const progressCircle = document.querySelector('.autoplay-progress svg');
    const progressContent = document.querySelector('.autoplay-progress span');
    const swiper = new Swiper('.swiper-container-hero', {
      slidesPerView: 1,
      spaceBetween: 10,
      loop: true,
      pagination: false,
      navigation: {
        nextEl: '.arrow-right-hero',
        prevEl: '.arrow-left-hero',
      },
      autoplay: {
        delay: 3000,
      },
      on: {
        autoplayTimeLeft(s, time, progress) {
          progressCircle.style.setProperty('--progress', 1 - progress);
        },
      },
    });
  });
</script>

{% schema %}
{
  "name": "Hero Section",
  "settings": [],
  "blocks": [
    {
      "type": "slide",
      "name": "Slide",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Slide Image"
        },
        {
          "type": "text",
          "id": "title",
          "label": "Slide Title"
        },
        {
          "type": "textarea",
          "id": "text",
          "label": "Slide Text"
        },
        {
          "type": "url",
          "id": "button_link",
          "label": "Button Link"
        },
        {
          "type": "text",
          "id": "button_text",
          "label": "Button Text"
        },
        {
          "type": "select",
          "id": "title_alignment",
          "label": "Title Alignment",
          "options": [
            { "value": "left", "label": "Left" },
            { "value": "center", "label": "Center" },
            { "value": "right", "label": "Right" }
          ],
          "default": "left"
        },
        {
          "type": "select",
          "id": "button_alignment",
          "label": "Button Alignment",
          "options": [
            { "value": "left", "label": "Left" },
            { "value": "center", "label": "Center" },
            { "value": "right", "label": "Right" }
          ],
          "default": "left"
        },
        {
          "type": "checkbox",
          "id": "hide_button",
          "label": "Hide Button",
          "default": false
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Hero Section",
      "category": "Custom Sections"
    }
  ]
}
{% endschema %}
